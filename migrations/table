CREATE TABLE `users` (
                         `id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,  -- 用户 ID，自增整数类型，作为主键
                         `username` VARCHAR(255) NOT NULL,               -- 用户名
                         `password` VARCHAR(255) NOT NULL,               -- 密码
                         `email` VARCHAR(255) NOT NULL UNIQUE,           -- 邮箱，确保唯一
                         `created_at` DATETIME NOT NULL,                 -- 创建时间
                         `updated_at` DATETIME NOT NULL,                 -- 更新时间
                         `avatar_url` VARCHAR(255),                      -- 用户头像
                         `status` INT NOT NULL DEFAULT 1                  -- 状态，默认为 1
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS `todos` (
                                       `id` INT AUTO_INCREMENT PRIMARY KEY,
                                       `user_id` INT NOT NULL,
                                       `title` VARCHAR(255) NOT NULL,
                                       `description` TEXT,
                                       `status` ENUM('pending', 'completed', 'failed') DEFAULT 'pending',
                                       `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                       `updated_at` VARCHAR(255) NULL,  -- 将 updated_at 字段的类型改为 VARCHAR
                                       FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON DELETE CASCADE
);




CREATE TABLE `community_posts` (
                                   `id` INT AUTO_INCREMENT PRIMARY KEY,        -- 自增主键
                                   `user_id` INT NOT NULL,                     -- 用户 ID，保持 INT 类型
                                   `content` TEXT NOT NULL,                    -- 动态内容
                                   `image_url` VARCHAR(255),                   -- 动态附带图片的 URL
                                   `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- 创建时间
                                   `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,  -- 更新时间
                                   `tags` VARCHAR(255),                        -- 标签字段
                                   `likes_count` INT DEFAULT 0,                -- 点赞数，默认为 0
                                   FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON DELETE CASCADE  -- 外键约束
);
-- 在 `community_posts` 表中增加 `comments_count` 字段
ALTER TABLE `community_posts`
    ADD COLUMN `comment_count` INT DEFAULT 0 AFTER `likes_count`;


CREATE TABLE `likes` (
                         `id` INT AUTO_INCREMENT PRIMARY KEY,        -- 点赞记录的自增 ID
                         `user_id` INT NOT NULL,                     -- 点赞的用户 ID，保持 INT 类型
                         `post_id` INT NOT NULL,                     -- 点赞的社区动态 ID，保持 INT 类型
                         `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- 点赞时间
                         FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON DELETE CASCADE,  -- 外键约束
                         FOREIGN KEY (`post_id`) REFERENCES `community_posts`(`id`) ON DELETE CASCADE  -- 外键约束
);


CREATE TABLE `comments` (
                            `id` INT AUTO_INCREMENT PRIMARY KEY,                  -- 评论的唯一 ID
                            `post_id` INT NOT NULL,                                -- 关联的动态 ID
                            `user_id` INT NOT NULL,                                -- 评论的用户 ID
                            `content` TEXT NOT NULL,                               -- 评论内容
                            `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,      -- 评论时间
                            FOREIGN KEY (`post_id`) REFERENCES `community_posts`(`id`) ON DELETE CASCADE, -- 关联到动态表
                            FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON DELETE CASCADE             -- 关联到用户表
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE checkins (
                          id INT AUTO_INCREMENT PRIMARY KEY,                -- 自增主键
                          user_id INT NOT NULL,                             -- 用户 ID，保持 INT 类型
                          title VARCHAR(255) NOT NULL,       -- 打卡标题
                          start_date DATE NOT NULL,
                          end_date DATE NOT NULL,
                          checkin_count JSON NOT NULL,                      -- 每天的打卡次数（JSON 格式）
                          target_checkin_count INT,                         -- 目标打卡次数，添加该字段
                          icon INT,                                         -- 图标
                          motivation_message VARCHAR(255),                  -- 鼓励语
                          FOREIGN KEY (user_id) REFERENCES users(id)       -- 外键关联到用户表的 id 字段
);



